---
# tasks file for $roletemplate

- include: debian.yml
  when: ansible_os_family == 'Debian'

- include: redhat.yml
 when: ansible_os_family == 'RedHat'

- name: Configure logstash.yml
  blockinfile:
    block: "{{ logstash_options }}"
    backup: yes
    dest: /etc/logstash/logstash.yml
  notify:
    - restart logstash

- name: Configure java long startup workaround
  lineinfile:
    backup: yes
    line: '-Djava.security.egd=file:/dev/./urandom'
    dest: /etc/logstash/jvm.options
    state: "{{ logstash_longstartupworkaround | ternary('present','absent') }}"

- name: Install Logstash Plugins
  command: /usr/share/logstash/bin/logstash-plugin install --no-verify {{ item.plugin_name }}
  with_items: "{{ logstash_plugins }}"
  notify:
    - restart logstash

- name: Allow logstash to bind privileged ports
  capabilities:
    path: /usr/lib/jvm/default-java/jre/bin/java
    capability: cap_net_bind_service+epi
    state: "{{ logstash_bindprivileged | ternary('present','absent') }}"
  when: logstash_bindprivileged is defined
  notify:
  - restart logstash

- name: Copy Logstash configuration
  copy:
    src: "{{ logstash_configuration }}"
    dest: /etc/logstash/conf.d/
    backup: yes
    owner: root
    group: root
    mode: 0644
  when: logstash_configuration != ""
  notify:
  - restart logstash

- name: Template Additional Logstash configuration
  template:
    src: "{{ item }}"
    dest: /etc/logstash/conf.d/{{ item | basename | regex_replace('.j2','') }}
    backup: yes
    owner: root
    group: root
    mode: 0644
  with_items: "{{ logstash_configurationtemplates }}"
  notify:
  - restart logstash

- name: Enable Logstash service
  service: name=logstash enabled=yes state=started
